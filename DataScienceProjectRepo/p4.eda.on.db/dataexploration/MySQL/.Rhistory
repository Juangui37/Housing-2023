install.packages("shiny")
install.packages("learnr")
install.packages('IRkernel')
IRkernel::installspec(name = 'house_r', displayname = 'R House'
IRkernel::installspec(name = 'house_r', displayname = 'R House')
IRkernel::installspec(name = 'house_r', displayname = 'R House')
IRkernel::installspec(name = 'house_r', displayname = 'R House')
install.packages('jupyter_client')
IRkernel::installspec(name = 'house_r', displayname = 'R House')
install.packages(c("blob", "broom", "cachem", "checkmate", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "fontawesome", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "hms", "htmltools", "htmlwidgets", "later", "lattice", "learnr", "markdown", "MASS", "Matrix", "modelr", "openssl", "pillar", "processx", "ps", "renv", "rlang", "rmarkdown", "survival", "tibble", "tinytex", "vctrs", "viridisLite", "vroom", "xfun", "xml2"))
# Load the "MASS" library for stepAIC function
library(MASS)
library(dplyr)
summary(ModelData)
#Remove all the variables that only have 1 unique value
sapply(ModelData, function(x) length(unique(x)))
ModelData <- read.csv("~/Library/CloudStorage/OneDrive-EasternConnecticutStateUniversity/ecsu/year4/spring2023/csc480/projectsteps/p4dbeda/dataexploration/MySQL/ModelData.csv", stringsAsFactors=TRUE)
View(ModelData)
# Load the "MASS" library for stepAIC function
library(MASS)
library(dplyr)
summary(ModelData)
#Remove all the variables that only have 1 unique value
sapply(ModelData, function(x) length(unique(x)))
#finding the variables that have 1 unique identifier and getting the unique identifier
ModelData %>%
select_if(~n_distinct(.) == 1) %>%
summarise(across(everything(), ~toString(unique(.))))
# HouseStatus is only 'Closed' because this is filtered data to have no N/A's in ClosePrice. PropType is Single Family home and Bedrooms was always 3.
unique_counts <- sapply(ModelData, function(x) length(unique(x)))
aicdf <- ModelData[, unique_counts > 1]
# create a new data frame without the variables to be removed
aicdf_new <- aicdf[, !names(aicdf) %in% c("AgentID", "listingagent", "MLSNum", "StatusChangeTimestamp", "ListPrice", "PhoneNumber", "Email", "Year", "Year_Month", "Day_of_Week")]
# create the regression model using stepAIC
model <- lm(ClosePrice ~ ., data = aicdf_new)
summary(model)
View(model)
# create a new data frame without the variables to be removed
aicdf_new <- aicdf[, !names(aicdf) %in% c("AgentID", "listingagent", "MLSNum", "StatusChangeTimestamp", "ListPrice", "PhoneNumber", "Email", "Year", "Year_Month", "Day_of_Week", "Address")]
# create the regression model using stepAIC
model <- lm(ClosePrice ~ ., data = aicdf_new)
summary(model)
# create a new data frame without the variables to be removed
aicdf_new <- aicdf[, !names(aicdf) %in% c("AgentID", "listingagent", "MLSNum", "StatusChangeTimestamp", "ListPrice", "PhoneNumber", "Email", "Year", "Year_Month", "Day_of_Week", "Address","GaragePark")]
# create the regression model using stepAIC
model <- lm(ClosePrice ~ ., data = aicdf_new)
summary(model)
summary(aicdf_new)
# create the regression model using stepAIC
model <- lm(ClosePrice ~ ., data = aicdf_new)
summary(model)
model.aic <- stepAIC(model, direction = "both", trace = FALSE)
# Print the model with lowest AIC
summary(model.aic)
# Print the model with lowest AIC
summary(model.aic)
# create new data point with values for all independent variables except ClosePrice
new_data <- data.frame(
PropType = "SF",
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
StyleorRentType = "Ranch",
RoomsTotal = 7,
BedsTotal = 4,
Bathrooms = 3,
)
# create new data point with values for all independent variables except ClosePrice
new_data <- data.frame(
PropType = "SF",
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
StyleorRentType = "Ranch",
RoomsTotal = 7,
BedsTotal = 4,
Bathrooms = 3)
# use the model to predict ClosePrice for the new data point
predicted_price <- predict(model, newdata = new_data)
# Print the model with lowest AIC
summary(model.aic)
summary(model)
summary(aicdf_new)
# create new data point with values for all independent variables except ClosePrice
new_data <- data.frame(
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
SqFtEstHeatedAboveGrade = "1412"
StyleorRentType = "Ranch",
# create new data point with values for all independent variables except ClosePrice
new_data <- data.frame(
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
SqFtEstHeatedAboveGrade = 1412
StyleorRentType = "Ranch",
# create new data point with values for all independent variables except ClosePrice
new_data <- data.frame(
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
SqFtEstHeatedAboveGrade = 1412,
StyleorRentType = "Ranch",
RoomsTotal = 7,
BedsTotal = 4,
Bathrooms = 3)
# use the model to predict ClosePrice for the new data point
predicted_price <- predict(model, newdata = new_data)
summary(aicdf_new)
# create new data point with values for all independent variables except ClosePrice
new_data <- data.frame(
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
SqFtEstHeatedAboveGrade = 1412,
StyleorRentType = "Ranch",
RoomsTotal = 7,
BedsTotal = 4,
Bathrooms = 3,
YearBuilt = 2010,
DaysonMarket = 8)
# use the model to predict ClosePrice for the new data point
predicted_price <- predict(model, newdata = new_data)
# use the model to predict ClosePrice for the new data point
(predicted_price <- predict(model, newdata = new_data))
summary(aicdf_new)
aicdf_new2  aicdf[, !names(aicdf) %in% c("DaysonMarket","YearBuilt","SqFtEstHeatedAboveGrade")]
aicdf_new2  aicdf_new[, !names(aicdf) %in% c("DaysonMarket","YearBuilt","SqFtEstHeatedAboveGrade")]
aicdf_new2  aicdf_new[, !names(aicdf_new) %in% c("DaysonMarket","YearBuilt","SqFtEstHeatedAboveGrade")]
aicdf_new <- aicdf[, !names(aicdf) %in% c("AgentID", "listingagent", "MLSNum", "StatusChangeTimestamp", "ListPrice", "PhoneNumber", "Email", "Year", "Year_Month", "Day_of_Week", "Address","GaragePark")]
aicdf_new2  aicdf_new[, !names(aicdf_new) %in% c("DaysonMarket","YearBuilt","SqFtEstHeatedAboveGrade")]
aicdf_new2 <- aicdf_new[, !names(aicdf_new) %in% c("DaysonMarket","YearBuilt","SqFtEstHeatedAboveGrade")]
summary(aicdf_new2)
# create the regression model using stepAIC
model2 <- lm(ClosePrice ~ ., data = aicdf_new2)
summary(model2)
model.aic2 <- stepAIC(model2, direction = "both", trace = FALSE)
# Print the model with lowest AIC
summary(model.aic2)
# create new data point with values for all independent variables except ClosePrice
new_data2 <- data.frame(
City = "East Hartford",
Acres = 0.5,
SqFtTotal = 2000,
StyleorRentType = "Ranch",
RoomsTotal = 7,
BedsTotal = 4,
Bathrooms = 3)
# use the model to predict ClosePrice for the new data point
(predicted_price <- predict(model, newdata = new_data))
# use the model to predict ClosePrice for the new data point
(predicted_price <- predict(model, newdata = new_data))
# use the model to predict ClosePrice for the new data point
(predicted_price <- predict(model2, newdata = new_data))
# Print the model with lowest AIC
summary(model.aic)
# use the model to predict ClosePrice for the new data point
(predicted_price <- predict(model2, newdata = new_data))
print('My future house costs about: $332,202.80  ')
setwd("/Users/juanvillegas/Library/CloudStorage/OneDrive-EasternConnecticutStateUniversity/ecsu/year4/spring2023/csc480/projectsteps/p4dbeda/dataexploration/MySQL")
